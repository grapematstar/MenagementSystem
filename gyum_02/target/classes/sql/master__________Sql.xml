<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gyum_02.master__________Sql">
	<select id="mpStudentEvalInfo" parameterType="HashMap"
	resultType="gyum_02.masterpage.model._____.mp_EvalDTO">
		select
			student.stu_idx, student.stu_name, class.class_idx,
			teacher.tea_idx, teacher.tea_name, class.class_subject,
			(class_eval.c_e_a1+class_eval.c_e_a2+class_eval.c_e_a3
			+class_eval.c_e_a4+class_eval.c_e_a5)/5 as eval_avg,
            class_eval.c_e_writedate, class_eval.c_e_note
		from
			student, class, class_student, teacher, class_eval
		where
			class_student.stu_idx = student.stu_idx and
			class_student.class_idx = class.class_idx and
			teacher.tea_idx = class.tea_idx and
			class_eval.stu_idx = student.stu_idx and
			class_eval.class_idx = class.class_idx and
			class_eval.tea_idx = teacher.tea_idx and
			class_eval.c_e_fix = 1 and
			class.class_idx = #{class_idx} and
			(student.stu_name like '%'||#{stu_name}||'%' or
			teacher.tea_name like '%'||#{stu_name}||'%')
	</select>
	
	<select id="mpQuestionList"
	resultType="gyum_02.masterpage.model._____.mp_EvalDTO">
		select
			c_e_q_idx, c_e_q_question 
		from
			class_eval_question
	</select>
	
	<select id="mpEvalInfo" parameterType="HashMap"
	resultType="gyum_02.masterpage.model._____.mp_EvalDTO">
		select 
			*
		from
			class_eval
		where
			stu_idx = #{stu_idx} and
			class_idx = #{class_idx}
	</select>
	
	
	<select id="mpTeacherEvalList" parameterType="String"
	resultType="gyum_02.masterpage.model._____.mp_EvalDTO">
		select
			class.class_idx, class.class_subject,          
			teacher.tea_idx, teacher.tea_name, 
			(class_eval.c_e_a1+class_eval.c_e_a2+class_eval.c_e_a3
				+class_eval.c_e_a4+class_eval.c_e_a5)/
		        (select
					count(c_e_q_idx)-1
				from
					class_eval_question)/
		        count(distinct class_eval.stu_idx) as eval_avg,
		    min(class_eval.c_e_writedate) as min_c_e_writedate,
		    max(class_eval.c_e_writedate) as max_c_e_writedate,
		    stu_on_eval.stu_on_eval, stu_total.stu_total
		from
			student, class, class_student, teacher, class_eval,
			(select
		        count(student.stu_idx) stu_total, class_student.class_idx
		    from
		        student, class_student, class_eval
		    where
		        class_student.stu_idx = student.stu_idx
		        and class_student.class_idx = class_eval.class_idx
		    group by
		        class_student.class_idx) stu_total,
		    (select
		        sum(case
		            when
		                class_student.stu_idx = student.stu_idx and
		                class_student.class_idx = class_eval.class_idx and
		                class_eval.stu_idx = student.stu_idx and
		                class_eval.c_e_fix = 1 
		            then 1
		            else 0
		        end) stu_on_eval, class_student.class_idx
		    from
		        student, class_student, class_eval
		    where
		        class_student.stu_idx = student.stu_idx and
		        class_student.class_idx = class_eval.class_idx
		    group by
		        class_student.class_idx) stu_on_eval
		where
			class_student.stu_idx = student.stu_idx and
			class_student.class_idx = class.class_idx and
			teacher.tea_idx = class.tea_idx and
			class_eval.stu_idx = student.stu_idx and
			class_eval.class_idx = class.class_idx and
			class_eval.tea_idx = teacher.tea_idx and
			class_eval.c_e_fix = 1 and
			(teacher.tea_name like '%'||#{tea_name}||'%' or
			 class.class_subject like '%'||#{class_subject}||'%') and
		    stu_on_eval.class_idx = class_student.class_idx and
		    stu_total.class_idx = class_student.class_idx
		group by
		    class.class_idx, class.class_subject,
		    teacher.tea_idx, teacher.tea_name,
		    class_eval.c_e_a1, class_eval.c_e_a2,
		    class_eval.c_e_a3, class_eval.c_e_a4,
		    class_eval.c_e_a5,stu_on_eval,
		    stu_total
	</select>
	
	<select id="mpEvalAvgInfo" parameterType="int"
	resultType="gyum_02.masterpage.model._____.mp_EvalDTO">
		    select
			    class.class_idx, class.class_subject, 
			    teacher.tea_idx, teacher.tea_name,
			    avg(class_eval.c_e_a1) as c_e_a1_avg,
			    avg(class_eval.c_e_a2) as c_e_a2_avg,
			    avg(class_eval.c_e_a3) as c_e_a3_avg, 
			    avg(class_eval.c_e_a4) as c_e_a4_avg,
			    avg(class_eval.c_e_a5) as c_e_a5_avg,
			    LISTAGG(class_eval.c_e_note, '|') 
				   WITHIN GROUP(ORDER BY class.class_idx) as c_e_note  
			from
			    class, class_eval, teacher
			where
			    class.class_idx = class_eval.class_idx and
			    class.tea_idx = teacher.tea_idx and
			    class_eval.c_e_fix = 1 and
			    class.class_idx =  #{class_idx}
			group by
			    class.class_idx, class.class_subject,
			    teacher.tea_idx, teacher.tea_name
		    
	</select>
	
	<!-- 
	========================================================================
	 -->
	
	<select id="mpClassSearchList" 
	parameterType="gyum_02.masterpage.model._____.mp_ClassManagementDTO"
	resultType="gyum_02.masterpage.model._____.mp_ClassManagementDTO">
		
		select
		    class.class_idx, subject_num.subject_name, class.class_subject,
		    teacher.tea_name, class.class_day, class_check.class_check, 
		    class.class_startdate, class.class_enddate, class.class_max_student,
		    class.class_price, teacher.tea_idx, class.classroom, 
		    class.subject_num, class.class_time
		from
		    class, class_check, teacher, subject_num
		where
		    class.class_idx = class_check.class_idx
		    and teacher.tea_idx = class.tea_idx
		    and class.subject_num = subject_num.subject_num
		<if 
		 test="checkbox_class_check_0!=null || checkbox_class_check_1!=null 
		 || checkbox_class_check_2!=null">
    		and class_check.class_check like case
			<if test="checkbox_class_check_0 != null">
                when class_check.class_check = 0 then 0
			</if>
			<if test="checkbox_class_check_1 != null">
                when class_check.class_check = 1 then 1
			</if>
			<if test="checkbox_class_check_2 != null">
                when class_check.class_check = 2 then 2
			</if>
                end
		</if>
		<if test="checkbox_class_day_0!=null || checkbox_class_day_1!=null 
		 || checkbox_class_day_2!=null || checkbox_class_day_3!=null 
		 || checkbox_class_day_4!=null">
            and class.class_day like case
			<if test="checkbox_class_day_0 != null">
                when class.class_day = '월요일' then '월요일'
			</if>
			<if test="checkbox_class_day_1 != null">
                when class.class_day = '화요일' then '화요일'
			</if>
			<if test="checkbox_class_day_2 != null">
                when class.class_day = '수요일' then '수요일'
			</if>
			<if test="checkbox_class_day_3 != null">
                when class.class_day = '목요일' then '목요일'
			</if>
			<if test="checkbox_class_day_4 != null">
                when class.class_day = '금요일' then '금요일'
			</if>
                end
		</if>
		<if test="checkbox_class_idx!=null || checkbox_subject_name!=null 
		 || checkbox_class_subject!=null || checkbox_tea_name!=null 
		 || checkbox_class_startdate!=null || checkbox_class_enddate!=null">
        order by
			<if test="checkbox_class_idx != null">
            class.class_idx asc
				<if test="checkbox_subject_name!=null 
				 || checkbox_class_subject!=null || checkbox_tea_name!=null 
				 || checkbox_class_startdate!=null || checkbox_class_enddate!=null">
	            ,
				</if>
			</if>
			<if test="checkbox_subject_name != null">
            subject_num.subject_name asc
				<if test="checkbox_class_subject!=null || checkbox_tea_name!=null 
				|| checkbox_class_startdate!=null || checkbox_class_enddate!=null">
	            ,
				</if>
			</if>
			<if test="checkbox_class_subject != null">
            class.class_subject asc
				<if test="checkbox_tea_name!=null || checkbox_class_startdate!=null 
				 || checkbox_class_enddate!=null">
	            ,
				</if>
			</if>
			<if test="checkbox_tea_name != null">
            teacher.tea_name asc
				<if test="checkbox_class_startdate!=null 
				 || checkbox_class_enddate!=null">
	            ,
				</if>
			</if>
			<if test="checkbox_class_startdate != null">
            class.class_startdate asc
				<if test="checkbox_class_enddate!=null">
	            ,
				</if>
			</if>
			<if test="checkbox_class_enddate != null">
            class.class_enddate asc
			</if>
    	</if>
	</select>
	
	<update id="mpClassCheckUpdate" 
	 parameterType="HashMap">
	 	update 
	 		class_check
		set
			class_check = #{class_check}
		where
		<foreach item="item" index="index"
		 collection="list" open=""
			separator=" or " close="">
			class_idx = #{item.value}
		</foreach>
	 
	</update>
	
	<update id="mpClassUpdate" 
	 parameterType="gyum_02.masterpage.model._____.mp_ClassManagementDTO">
	 	update 
	 		class
		set
			subject_num = #{subject_num},
			class_startdate = #{class_startdate},
			class_enddate = #{class_enddate},
			classroom = #{classroom},
			class_day = #{class_day},
			class_time = #{class_time},
			class_subject = #{class_subject},
			tea_idx = #{tea_idx},
			class_price = #{class_price},
			class_max_student = #{class_max_student}
		where
			class_idx = #{class_idx}
	</update>
	
	<select id="getStudentCcRepositoryList" parameterType="String"
		resultType="gyum_02.cybercampus.Model.CccccccDTO">
		select
		    *
		from
		    student, class_student, club_homework_teacher,
		    club_homework_student, class, teacher, filedb
		where
		    class_student.class_idx = club_homework_teacher.class_idx
		    and student.stu_idx = class_student.stu_idx
		    and club_homework_teacher.c_h_t_idx = club_homework_student.c_h_t_idx
		    and student.stu_idx = club_homework_student.stu_idx
		    and class.class_idx = class_student.class_idx
		    and teacher.tea_idx = class.tea_idx
		    and club_homework_student.file_idx = filedb.file_idx
			and student.stu_id = #{stu_id}
	</select>
	
	<select id="getTeacherCcRepositoryList" parameterType="String"
		resultType="gyum_02.cybercampus.Model.CccccccDTO">
		select
		    *
		from
		    student, class_student, club_homework_teacher,
		    club_homework_student, class, teacher, filedb
		where
		    class_student.class_idx = club_homework_teacher.class_idx
		    and student.stu_idx = class_student.stu_idx
		    and club_homework_teacher.c_h_t_idx = club_homework_student.c_h_t_idx
		    and student.stu_idx = club_homework_student.stu_idx
		    and class.class_idx = class_student.class_idx
		    and teacher.tea_idx = class.tea_idx
		    and club_homework_student.file_idx = filedb.file_idx
		    and teacher.tea_id = #{tea_id}
	</select>
	
	
</mapper>